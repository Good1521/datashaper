// eslint-disable-next-line
export default "# bin\n\nSorts continuous data into defined buckets. Values in the input table cell are replaced in the output with the lower bin boundary that they fall within.\n\nMultiple binning strategies are supported:\n\n- Auto: uses automatic bin boundary guessing to create nice default bins (uses [Arquero's default bin strategy](https://uwdata.github.io/arquero/api/op#bins))\n- Fixed width: creates bins at an exact width specified\n- Fixed count: divides the data range into a fixed number of bins of equal width\n\nYou may supply a fixed min/max to set the outer bin boundaries. By default, if data values fall outside these boundaries they are set to +/- Infinity. If clamping is enabled, values outside the boundary are assigned to the first and last bins as appropriate (i.e., values over the max fall into the last bin). Establishing min/max bounds and clamping allows data values to be binned without revealing the true extent of the data, or whether any individual rows exceed those bounds.\n\n## Examples\n\n| val |\n| --- |\n| 8   |\n| 10  |\n| 17  |\n| 21  |\n| 31  |\n\n`bin column['val'] with bins=[0, 10, 20, 30]`:\n\n| val |\n| --- |\n| 0   |\n| 10  |\n| 10  |\n| 20  |\n| 30  |\n\n`bin column['val'] with bins=[0, 10, 20, 30], max=20`:\n\n| val      |\n| -------- |\n| 0        |\n| 10       |\n| 10       |\n| 20       |\n| Infinity |\n\n`bin column['val'] with bins=[0, 10, 20, 30], max=30, clamping=true` masks the boundary overrun:\n\n| val |\n| --- |\n| 0   |\n| 10  |\n| 10  |\n| 20  |\n| 20  |\n"
