// eslint-disable-next-line
export default "# rollup\n\nPerforms aggregation operations on table columns. Normally the table should be [grouped](./groupby.md) first, otherwise the aggregation will be performed using all rows. Aggregation is commonly used to compute statistics over a list of values. To avoid interface complexity, this verb currently only supports aggregations that take a single column as the input.\n\n## Operations\n\n- `any`: plucks a single value\n- `count`: counts the values\n- `distinct`: counts the unique values\n- `valid`: counts the number of valid (non-null) values\n- `invalid`: counts the number of invalid values (null, undefined, NaN)\n- `max`: finds the maximum value\n- `min`: finds the minimum value\n- `sum`: sums the values\n- `product`: computes the product of the values\n- `mean`: computes the mean of the values\n- `mode`: finds the mode of the values\n- `median`: finds the median of the values\n- `stdev`: computes the standard deviation of the values\n- `stdevp`: computes the population standard deviation of the values\n- `variance`: computes the variane of the values\n- `array_agg`: collects all of the values in an array\n- `array_agg_distinct`: collects all of the unique values in an array\n\n## Examples\n\n| id  | value |\n| --- | ----- |\n| 1   | 10    |\n| 1   | 15    |\n| 2   | 1     |\n| 2   | 11    |\n| 2   | 18    |\n\n`rollup column['value'] with function='sum', to_column='output'`:\n\n| output |\n| ------ |\n| 55     |\n\n`groupby column['id']` and then `rollup column['value'] with function='sum', to_column='output'`:\n\n| id  | output |\n| --- | ------ |\n| 1   | 25     |\n| 2   | 30     |\n\n`groupby column['id']` and then `rollup column['value'] with function='array_agg', to_column='output'`:\n\n| id  | output      |\n| --- | ----------- |\n| 1   | [10, 15]    |\n| 2   | [1, 11, 18] |\n"
