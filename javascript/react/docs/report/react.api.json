{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.29.2",
    "schemaVersion": 1009,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@datashaper/react!",
  "docComment": "",
  "name": "@datashaper/react",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@datashaper/react!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!ArqueroDetailsList:var",
          "docComment": "/**\n * Renders an arquero table using a fluent DetailsList.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ArqueroDetailsList: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ArqueroDetailsListProps",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ArqueroDetailsList",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!ArqueroDetailsListProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ArqueroDetailsListProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsListProps",
              "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'items'>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ArqueroDetailsListProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#clickableColumns:member",
              "docComment": "/**\n * Indicates that the entire column is clickable for selection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clickableColumns?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "clickableColumns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#defaultSortColumn:member",
              "docComment": "/**\n * Default sort column\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultSortColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultSortColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#defaultSortDirection:member",
              "docComment": "/**\n * Resizable sort direction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultSortDirection?: "
                },
                {
                  "kind": "Reference",
                  "text": "SortDirection",
                  "canonicalReference": "@datashaper/schema!SortDirection:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultSortDirection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#features:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "features?: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailsListFeatures",
                  "canonicalReference": "@datashaper/react!DetailsListFeatures:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "features",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#fill:member",
              "docComment": "/**\n * Indicates that the table should fill its container space, including the use of pseudo columns and rows to present a \"spreadsheet-like\" view.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fill?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fill",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#isHeaderFixed:member",
              "docComment": "/**\n * Fixed headers on top when scrolling\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isHeaderFixed?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isHeaderFixed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#limit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "limit?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "limit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#metadata:member",
              "docComment": "/**\n * Optional metadata to use for column smart features. Use this if you need to cache expensive stats computes separately to prevent recompute on remounting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableMetadata",
                  "canonicalReference": "@datashaper/tables!TableMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#offset:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offset?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "offset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#onCellDropdownSelect:member",
              "docComment": "/**\n * If array cells are displayed with a dropdown, this will fire when a value is selected.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onCellDropdownSelect?: "
                },
                {
                  "kind": "Reference",
                  "text": "DropdownOptionSelect",
                  "canonicalReference": "@datashaper/react!DropdownOptionSelect:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onCellDropdownSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#onColumnClick:member",
              "docComment": "/**\n * Passthrough to the column click handler. Will be applied to the column header only unless clickableColumns === true. Note that if the entire column is not clickable, this is duplicative of the built-in onColumnHeaderClick and they will both fire. TODO: maybe turn this into onColumnSelect?\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnClickFunction",
                  "canonicalReference": "@datashaper/react!ColumnClickFunction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onColumnClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#onRenderGroupHeader:member",
              "docComment": "/**\n * Passthrough to the group header rendering, when using the group by verb\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderGroupHeader?: "
                },
                {
                  "kind": "Reference",
                  "text": "GroupHeaderFunction",
                  "canonicalReference": "@datashaper/react!GroupHeaderFunction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onRenderGroupHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#resizable:member",
              "docComment": "/**\n * Resizable columns\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resizable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resizable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#selectedColumn:member",
              "docComment": "/**\n * Key for a selected column - this is not normally an option in DetailsList\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "selectedColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#showColumnBorders:member",
              "docComment": "/**\n * Indicates to use borders between columns so the cells look more like a spreadsheet (row borders are always on).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showColumnBorders?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showColumnBorders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#sortable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sortable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#striped:member",
              "docComment": "/**\n * Indicates whether to use even/odd row coloring.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "striped?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "striped",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#style:member",
              "docComment": "/**\n * Style to pass to the container. Use the regular DetailsList.styles prop for deeper customization of the table itself.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "style?: "
                },
                {
                  "kind": "Reference",
                  "text": "CSSProperties",
                  "canonicalReference": "@types/react!~React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "style",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#table:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "table: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnTable",
                  "canonicalReference": "arquero!default:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "table",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!ArqueroTableHeader:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ArqueroTableHeader: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ArqueroTableHeaderProps",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ArqueroTableHeader",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ArqueroTableHeaderProps "
            }
          ],
          "releaseTag": "Public",
          "name": "ArqueroTableHeaderProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#background:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "background?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "background",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#color:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#commandBar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commandBar?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactElement",
                  "canonicalReference": "@types/react!~React.ReactElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commandBar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#farCommandBar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "farCommandBar?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactElement",
                  "canonicalReference": "@types/react!~React.ReactElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "farCommandBar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#onRenameTable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenameTable?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onRenameTable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#showColumnCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showColumnCount?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showColumnCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#showRowCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showRowCount?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showRowCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#styles:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "ArqueroTableHeaderStyles",
                  "canonicalReference": "@datashaper/react!ArqueroTableHeaderStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#table:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "table: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnTable",
                  "canonicalReference": "arquero!default:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "table",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#visibleColumns:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visibleColumns?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "visibleColumns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!ArqueroTableHeaderStyles:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ArqueroTableHeaderStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "ArqueroTableHeaderStyles",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root?: "
                },
                {
                  "kind": "Reference",
                  "text": "CSSProperties",
                  "canonicalReference": "@types/react!~React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!checkedItemsCommand:function(1)",
          "docComment": "/**\n * Constructs a command for listing out items with checks\n *\n * @param list - full list of items to display\n *\n * @param checked - subset of items to display with checkbox\n *\n * @param onCheckChange - \n *\n * @param props - any override ICommandBarItemProps to overlay on the command\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function checkedItemsCommand(list: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", checked?: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", onCheckChange?: "
            },
            {
              "kind": "Content",
              "text": "(name: string, checked: boolean, index: number) => boolean | void"
            },
            {
              "kind": "Content",
              "text": ", props?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ICommandBarItemProps",
              "canonicalReference": "@fluentui/react!ICommandBarItemProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICommandBarItemProps",
              "canonicalReference": "@fluentui/react!ICommandBarItemProps:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "list",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "checked",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "onCheckChange",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "isOptional": true
            }
          ],
          "name": "checkedItemsCommand"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!ColumnClickFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ColumnClickFunction = "
            },
            {
              "kind": "Content",
              "text": "(evt?: "
            },
            {
              "kind": "Reference",
              "text": "React.MouseEvent",
              "canonicalReference": "@types/react!~React.MouseEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ">, column?: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ColumnClickFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!ColumnOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ColumnOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "ColumnOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#compact:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "compact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#features:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "features?: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailsListFeatures",
                  "canonicalReference": "@datashaper/react!DetailsListFeatures:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "features",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#isClickable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isClickable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isClickable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#isDefaultHeaderClickable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDefaultHeaderClickable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isDefaultHeaderClickable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#isSortable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSortable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isSortable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#onCellDropdownSelect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onCellDropdownSelect?: "
                },
                {
                  "kind": "Reference",
                  "text": "DropdownOptionSelect",
                  "canonicalReference": "@datashaper/react!DropdownOptionSelect:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onCellDropdownSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#onColumnClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnClickFunction",
                  "canonicalReference": "@datashaper/react!ColumnClickFunction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onColumnClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#resizable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resizable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resizable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#selectedColumn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "selectedColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#showColumnBorders:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showColumnBorders?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showColumnBorders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#sortColumn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sortColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ColumnOptions#sortDirection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortDirection?: "
                },
                {
                  "kind": "Reference",
                  "text": "SortDirection",
                  "canonicalReference": "@datashaper/schema!SortDirection:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sortDirection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!ColumnRenderFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ColumnRenderFunction = "
            },
            {
              "kind": "Content",
              "text": "(item?: any, index?: number, column?: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": ") => any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ColumnRenderFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!CustomIconProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CustomIconProps "
            }
          ],
          "releaseTag": "Public",
          "name": "CustomIconProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CustomIconProps#color:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CustomIconProps#fontSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fontSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fontSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!defaultIconClass:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultIconClass: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "defaultIconClass",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!DetailsListFeatures:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DetailsListFeatures "
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsListFeatures",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#commandBar:member",
              "docComment": "/**\n * Receive elements to render in the column header as commands, passing the column details to be used in the component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commandBar?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsColumnProps",
                  "canonicalReference": "@fluentui/react!IDetailsColumnProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commandBar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#histogramColumnHeaders:member",
              "docComment": "/**\n * Include histograms in the headers of numeric columns.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "histogramColumnHeaders?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "histogramColumnHeaders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#lazyLoadGroups:member",
              "docComment": "/**\n * Collapse most groups so we can lazy load them. Default as true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lazyLoadGroups?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lazyLoadGroups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#onHistogramColumnHeaderClick:member",
              "docComment": "/**\n * If histogramColumnHeaders is true the user can pass a custom function to the click event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onHistogramColumnHeaderClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "MetadataClickFunction",
                  "canonicalReference": "@datashaper/react!MetadataClickFunction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onHistogramColumnHeaderClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#onStatsColumnHeaderClick:member",
              "docComment": "/**\n * If statsColumnHeaders is true the user can pass a custom function to the click event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onStatsColumnHeaderClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "MetadataClickFunction",
                  "canonicalReference": "@datashaper/react!MetadataClickFunction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onStatsColumnHeaderClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#showBooleanSymbol:member",
              "docComment": "/**\n * Without smartCells, if datatype is boolean, shows a symbol\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showBooleanSymbol?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showBooleanSymbol",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#showCategoricalBar:member",
              "docComment": "/**\n * Without smartCells, if datatype is array, shows a categorical bar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showCategoricalBar?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showCategoricalBar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#showDateFormatted:member",
              "docComment": "/**\n * Without smartCells, if datatype is date, shows the date formatted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showDateFormatted?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showDateFormatted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#showDropdown:member",
              "docComment": "/**\n * Without smartCells, If datatype is array, shows a dropdown with the values\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showDropdown?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showDropdown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#showNumberMagnitude:member",
              "docComment": "/**\n * Without smartCells, if datatype is number, shows the magnitude of the value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showNumberMagnitude?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showNumberMagnitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#showSparkbar:member",
              "docComment": "/**\n * Without smartCells, if datatype is array, shows a sparkbar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showSparkbar?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showSparkbar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#showSparkline:member",
              "docComment": "/**\n * Without smartCells, if datatype is array, shows a sparkline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showSparkline?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showSparkline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#smartCells:member",
              "docComment": "/**\n * Use embedded charts and vis based on data types and cell contents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smartCells?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "smartCells",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#smartHeaders:member",
              "docComment": "/**\n * Includes stats and histograms in the headers of columns\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smartHeaders?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "smartHeaders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#statsColumnHeaders:member",
              "docComment": "/**\n * Include stats in the headers of columns.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "statsColumnHeaders?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "statsColumnHeaders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!DetailsListFeatures#statsColumnTypes:member",
              "docComment": "/**\n * If statsColumnHeaders or smartHeaders is true the user can pass which stats he wants\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "statsColumnTypes?: "
                },
                {
                  "kind": "Reference",
                  "text": "StatsColumnType",
                  "canonicalReference": "@datashaper/react!StatsColumnType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "statsColumnTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@datashaper/react!DisplayOrder:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum DisplayOrder "
            }
          ],
          "releaseTag": "Public",
          "name": "DisplayOrder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!DisplayOrder.FirstOnTop:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FirstOnTop = "
                },
                {
                  "kind": "Content",
                  "text": "\"first-on-top\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FirstOnTop"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!DisplayOrder.LastOnTop:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "LastOnTop = "
                },
                {
                  "kind": "Content",
                  "text": "\"last-on-top\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "LastOnTop"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!downloadCommand:function(1)",
          "docComment": "/**\n * Constructs a download command. When clicked, will save the current table to a csv.\n *\n * @param table - \n *\n * @param downloadFilename - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function downloadCommand(table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ", downloadFilename?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", props?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ICommandBarItemProps",
              "canonicalReference": "@fluentui/react!ICommandBarItemProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICommandBarItemProps",
              "canonicalReference": "@fluentui/react!ICommandBarItemProps:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "table",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "downloadFilename",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "name": "downloadCommand"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!DropdownOptionSelect:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DropdownOptionSelect = "
            },
            {
              "kind": "Content",
              "text": "((event: "
            },
            {
              "kind": "Reference",
              "text": "React.FormEvent",
              "canonicalReference": "@types/react!~React.FormEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">, option?: "
            },
            {
              "kind": "Reference",
              "text": "IDropdownOption",
              "canonicalReference": "@fluentui/react!IDropdownOption:interface"
            },
            {
              "kind": "Content",
              "text": "<any> | undefined, index?: number | undefined) => void) | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DropdownOptionSelect",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!GroupHeaderFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GroupHeaderFunction = "
            },
            {
              "kind": "Content",
              "text": "(meta?: "
            },
            {
              "kind": "Reference",
              "text": "Field",
              "canonicalReference": "@datashaper/schema!Field:interface"
            },
            {
              "kind": "Content",
              "text": ", columnName?: string, props?: "
            },
            {
              "kind": "Reference",
              "text": "IDetailsGroupDividerProps",
              "canonicalReference": "@fluentui/react!IDetailsGroupDividerProps:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GroupHeaderFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!Guidance:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Guidance: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GuidanceProps",
              "canonicalReference": "@datashaper/react!GuidanceProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Guidance",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!GuidanceProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GuidanceProps "
            }
          ],
          "releaseTag": "Public",
          "name": "GuidanceProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!GuidanceProps#index:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "index: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!GuidanceProps#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!HistoryIcon:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "HistoryIcon: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CustomIconProps",
              "canonicalReference": "@datashaper/react!CustomIconProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "HistoryIcon",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!MetadataClickFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MetadataClickFunction = "
            },
            {
              "kind": "Content",
              "text": "(evt?: "
            },
            {
              "kind": "Reference",
              "text": "React.MouseEvent",
              "canonicalReference": "@types/react!~React.MouseEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "MouseEvent",
              "canonicalReference": "!MouseEvent:interface"
            },
            {
              "kind": "Content",
              "text": "> | undefined, column?: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined, metadata?: "
            },
            {
              "kind": "Reference",
              "text": "Field",
              "canonicalReference": "@datashaper/schema!Field:interface"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MetadataClickFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!SaveMetadataFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SaveMetadataFunction = "
            },
            {
              "kind": "Content",
              "text": "(meta: "
            },
            {
              "kind": "Reference",
              "text": "TableMetadata",
              "canonicalReference": "@datashaper/tables!TableMetadata:interface"
            },
            {
              "kind": "Content",
              "text": ", table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SaveMetadataFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!SortParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SortParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "SortParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!SortParameters#defaultSortColumn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultSortColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultSortColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!SortParameters#defaultSortDirection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultSortDirection?: "
                },
                {
                  "kind": "Reference",
                  "text": "SortDirection",
                  "canonicalReference": "@datashaper/schema!SortDirection:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultSortDirection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!SortParameters#onSort:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSort: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnClickFunction",
                  "canonicalReference": "@datashaper/react!ColumnClickFunction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onSort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!SortParameters#sortColumn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sortColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!SortParameters#sortDirection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortDirection?: "
                },
                {
                  "kind": "Reference",
                  "text": "SortDirection",
                  "canonicalReference": "@datashaper/schema!SortDirection:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sortDirection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@datashaper/react!StatsColumnType:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum StatsColumnType "
            }
          ],
          "releaseTag": "Public",
          "name": "StatsColumnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Count:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Count = "
                },
                {
                  "kind": "Content",
                  "text": "\"count\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Count"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Distinct:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Distinct = "
                },
                {
                  "kind": "Content",
                  "text": "\"distinct\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Distinct"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Invalid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Invalid = "
                },
                {
                  "kind": "Content",
                  "text": "\"invalid\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Invalid"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Max:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Max = "
                },
                {
                  "kind": "Content",
                  "text": "\"max\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Max"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Mean:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Mean = "
                },
                {
                  "kind": "Content",
                  "text": "\"mean\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Mean"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Median:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Median = "
                },
                {
                  "kind": "Content",
                  "text": "\"median\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Median"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Min:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Min = "
                },
                {
                  "kind": "Content",
                  "text": "\"min\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Min"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Mode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Mode = "
                },
                {
                  "kind": "Content",
                  "text": "\"mode\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Mode"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Stdev:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Stdev = "
                },
                {
                  "kind": "Content",
                  "text": "\"stdev\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Stdev"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Type = "
                },
                {
                  "kind": "Content",
                  "text": "\"type\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Type"
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!StepCard:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "StepCard: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StepCardProps",
              "canonicalReference": "@datashaper/react!StepCardProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "StepCard",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!StepCardProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StepCardProps "
            }
          ],
          "releaseTag": "Public",
          "name": "StepCardProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepCardProps#index:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepCardProps#onDelete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDelete?: "
                },
                {
                  "kind": "Content",
                  "text": "(index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDelete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepCardProps#onDuplicate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDuplicate?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDuplicate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepCardProps#onEdit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onEdit?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onEdit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepCardProps#onSelect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelect?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepCardProps#output:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "output: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "output",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepCardProps#step:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "step",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepCardProps#style:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "style?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        card?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        actions?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "style",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!StepComponent:var",
          "docComment": "/**\n * Let's us render the Steps in a loop while memoing all the functions\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "StepComponent: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StepComponentProps",
              "canonicalReference": "@datashaper/react!StepComponentProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "StepComponent",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!StepComponentProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StepComponentProps "
            }
          ],
          "releaseTag": "Public",
          "name": "StepComponentProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#hideInput:member",
              "docComment": "/**\n * Indicates that the input table should be hidden or else shown and editable by the user. It may be desirable to hide this if the modal is launched directly from a table, which would make display redundant.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideInput?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hideInput",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#hideInputColumn:member",
              "docComment": "/**\n * Indicates that the input column should be hidden or else shown and editable by the user. It may be desirable to hide this if the transform is expected to use the selected column when the modal is launched directly from a table.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideInputColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hideInputColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#hideOutput:member",
              "docComment": "/**\n * Indicates that the output table should be hidden or else shown and editable by the user. It may be desirable to hide this if the transform is expected to do an inline replacement of the input table.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideOutput?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hideOutput",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#index:member",
              "docComment": "/**\n * The step index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#inputColumnLabel:member",
              "docComment": "/**\n * Label for the input table dropdown\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputColumnLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inputColumnLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#inputTableLabel:member",
              "docComment": "/**\n * Label for the input-table dropdown\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputTableLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inputTableLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#metadata:member",
              "docComment": "/**\n * TableMetadata\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableMetadata",
                  "canonicalReference": "@datashaper/tables!TableMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#onChange:member",
              "docComment": "/**\n * The step onchange handler\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChange: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#onChangeOutput:member",
              "docComment": "/**\n * Event handler for when the output table name changes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChangeOutput: "
                },
                {
                  "kind": "Content",
                  "text": "(value: string | undefined) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChangeOutput",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#output:member",
              "docComment": "/**\n * The output table name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "output?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "output",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#outputColumnLabel:member",
              "docComment": "/**\n * The label to use for the output column field\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputColumnLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "outputColumnLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#outputTableDisabled:member",
              "docComment": "/**\n * Whether the output table name is disabled\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputTableDisabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "outputTableDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#outputTableLabel:member",
              "docComment": "/**\n * The label to use for the output field\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputTableLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "outputTableLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#step:member",
              "docComment": "/**\n * The processing step\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "step",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepComponentProps#workflow:member",
              "docComment": "/**\n * The workflow instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "workflow: "
                },
                {
                  "kind": "Reference",
                  "text": "Workflow",
                  "canonicalReference": "@datashaper/workflow!Workflow:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "workflow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!StepDescription:var",
          "docComment": "/**\n * Let's us render the Steps in a loop while memoing all the functions\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "StepDescription: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StepDescriptionProps",
              "canonicalReference": "@datashaper/react!StepDescriptionProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "StepDescription",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!StepDescriptionProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StepDescriptionProps "
            }
          ],
          "releaseTag": "Public",
          "name": "StepDescriptionProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepDescriptionProps#output:member",
              "docComment": "/**\n * The output table name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "output?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "output",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepDescriptionProps#step:member",
              "docComment": "/**\n * The processing step\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "step",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!StepHistoryList:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "StepHistoryList: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StepHistoryListProps",
              "canonicalReference": "@datashaper/react!StepHistoryListProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "StepHistoryList",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!StepHistoryListProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StepHistoryListProps "
            }
          ],
          "releaseTag": "Public",
          "name": "StepHistoryListProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepHistoryListProps#onDelete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDelete?: "
                },
                {
                  "kind": "Content",
                  "text": "(index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDelete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepHistoryListProps#onSave:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSave?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onSave",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepHistoryListProps#onSelect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelect?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepHistoryListProps#order:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "order?: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplayOrder",
                  "canonicalReference": "@datashaper/react!DisplayOrder:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "order",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepHistoryListProps#selectedKey:member",
              "docComment": "/**\n * Id of the selected step\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "selectedKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepHistoryListProps#showSelectButtons:member",
              "docComment": "/**\n * Indicates whether the original/latest buttons will be shown. Note that they will have no effect if you do not supply an onSelect handler too.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showSelectButtons?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showSelectButtons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepHistoryListProps#styles:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "StepHistoryStyles",
                  "canonicalReference": "@datashaper/react!StepHistoryStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepHistoryListProps#workflow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "workflow: "
                },
                {
                  "kind": "Reference",
                  "text": "Workflow",
                  "canonicalReference": "@datashaper/workflow!Workflow:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "workflow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!StepList:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "StepList: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StepListProps",
              "canonicalReference": "@datashaper/react!StepListProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "StepList",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!StepListProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StepListProps "
            }
          ],
          "releaseTag": "Public",
          "name": "StepListProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#buttonId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "buttonId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#onDeleteClicked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDeleteClicked?: "
                },
                {
                  "kind": "Content",
                  "text": "(index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDeleteClicked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#onDuplicateClicked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDuplicateClicked?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDuplicateClicked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#onEditClicked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onEditClicked?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onEditClicked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#onSelect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelect?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#onStartNewStep:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onStartNewStep?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onStartNewStep",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#outputs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "outputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#steps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "steps: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "steps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!StepSelector:var",
          "docComment": "/**\n * Creates a custom step selection dropdown. If \"showButton\" is true, a + icon will appear next to the dropdown, and onChange will only fire when it is clicked.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "StepSelector: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StepSelectorProps",
              "canonicalReference": "@datashaper/react!StepSelectorProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "StepSelector",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!StepSelectorProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StepSelectorProps "
            }
          ],
          "releaseTag": "Public",
          "name": "StepSelectorProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepSelectorProps#onCreate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onCreate?: "
                },
                {
                  "kind": "Content",
                  "text": "(verb: "
                },
                {
                  "kind": "Reference",
                  "text": "Verb",
                  "canonicalReference": "@datashaper/schema!Verb:enum"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onCreate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepSelectorProps#placeholder:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "placeholder?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "placeholder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepSelectorProps#showButton:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showButton?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showButton",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepSelectorProps#verb:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verb?: "
                },
                {
                  "kind": "Reference",
                  "text": "Verb",
                  "canonicalReference": "@datashaper/schema!Verb:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "verb",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!TableCommands:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TableCommands: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TableCommandsProps",
              "canonicalReference": "@datashaper/react!TableCommandsProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TableCommands",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!TableCommandsProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableCommandsProps "
            }
          ],
          "releaseTag": "Public",
          "name": "TableCommandsProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#background:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "background?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "background",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#color:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#commandBarProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commandBarProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ICommandBarProps",
                  "canonicalReference": "@fluentui/react!ICommandBarProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commandBarProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#inputTable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputTable?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableContainer",
                  "canonicalReference": "@datashaper/tables!TableContainer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inputTable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#metadata:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableMetadata",
                  "canonicalReference": "@datashaper/tables!TableMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#onAddStep:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onAddStep?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ", output: string | undefined, index: number | undefined) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onAddStep",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#onRemoveStep:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRemoveStep?: "
                },
                {
                  "kind": "Content",
                  "text": "(index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onRemoveStep",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#selectedColumn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "selectedColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#workflow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "workflow: "
                },
                {
                  "kind": "Reference",
                  "text": "Workflow",
                  "canonicalReference": "@datashaper/workflow!Workflow:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "workflow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!TableList:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TableList: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TableListProps",
              "canonicalReference": "@datashaper/react!TableListProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TableList",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!TableListProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableListProps "
            }
          ],
          "releaseTag": "Public",
          "name": "TableListProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableListProps#onSelect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelect?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableListProps#selected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selected?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "selected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableListProps#tables:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tables: "
                },
                {
                  "kind": "Reference",
                  "text": "TableContainer",
                  "canonicalReference": "@datashaper/tables!TableContainer:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!tableMenuCommand:function(1)",
          "docComment": "/**\n * Displays a table name along with a dropdown menu for selection of different tables.\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function tableMenuCommand(tables: "
            },
            {
              "kind": "Reference",
              "text": "TableContainer",
              "canonicalReference": "@datashaper/tables!TableContainer:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", selectedKey?: "
            },
            {
              "kind": "Content",
              "text": "string | undefined"
            },
            {
              "kind": "Content",
              "text": ", onChange?: "
            },
            {
              "kind": "Content",
              "text": "(id: string) => void"
            },
            {
              "kind": "Content",
              "text": ", props?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ICommandBarItemProps",
              "canonicalReference": "@fluentui/react!ICommandBarItemProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICommandBarItemProps",
              "canonicalReference": "@fluentui/react!ICommandBarItemProps:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "tables",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "selectedKey",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": true
            },
            {
              "parameterName": "onChange",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            },
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "isOptional": true
            }
          ],
          "name": "tableMenuCommand"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!TableTransform:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TableTransform: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TableTransformProps",
              "canonicalReference": "@datashaper/react!TableTransformProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TableTransform",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!TableTransformProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableTransformProps "
            }
          ],
          "releaseTag": "Public",
          "name": "TableTransformProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#headerText:member",
              "docComment": "/**\n * Optional header text to display on the modal\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "headerText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#hideInput:member",
              "docComment": "/**\n * Indicates that the input table should be hidden or else shown and editable by the user. It may be desirable to hide this if the modal is launched directly from a table, which would make display redundant.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideInput?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hideInput",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#hideInputColumn:member",
              "docComment": "/**\n * Indicates that the input column should be hidden or else shown and editable by the user. It may be desirable to hide this if the transform is expected to use the selected column when the modal is launched directly from a table.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideInputColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hideInputColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#hideOutput:member",
              "docComment": "/**\n * Indicates that the output table should be hidden or else shown and editable by the user. It may be desirable to hide this if the transform is expected to do an inline replacement of the input table.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideOutput?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hideOutput",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#hideStepSelector:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideStepSelector?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hideStepSelector",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#index:member",
              "docComment": "/**\n * The step index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#metadata:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableMetadata",
                  "canonicalReference": "@datashaper/tables!TableMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#onDelete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDelete?: "
                },
                {
                  "kind": "Content",
                  "text": "(index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDelete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#onTransformRequested:member",
              "docComment": "/**\n * Callback fired when the step is configured and \"run\" is clicked, indicating the application should execute the contructed/edited step.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTransformRequested?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onTransformRequested",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#onVerbChange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onVerbChange?: "
                },
                {
                  "kind": "Content",
                  "text": "(verb: "
                },
                {
                  "kind": "Reference",
                  "text": "Verb",
                  "canonicalReference": "@datashaper/schema!Verb:enum"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onVerbChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#showGuidance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showGuidance?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showGuidance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#showGuidanceButton:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showGuidanceButton?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showGuidanceButton",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#step:member",
              "docComment": "/**\n * Optional step for controlled component if pre-built config is planned.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step?: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "step",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#style:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "style?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.CSSProperties",
                  "canonicalReference": "@types/react!~React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "style",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#table:member",
              "docComment": "/**\n * Table to build the transform from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "table?: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnTable",
                  "canonicalReference": "arquero!default:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "table",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#target:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "target?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "target",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#toggleGuidance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleGuidance?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "toggleGuidance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#verbs:member",
              "docComment": "/**\n * Optional list of transform verbs to present to the user. If not supplied, all verbs for the desired operation (table or column) will be presented.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verbs?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "verbs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableTransformProps#workflow:member",
              "docComment": "/**\n * Table store to verify naming to be created\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "workflow: "
                },
                {
                  "kind": "Reference",
                  "text": "Workflow",
                  "canonicalReference": "@datashaper/workflow!Workflow:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "workflow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useCellDimensions:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCellDimensions(column?: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": ", considerCompactMode?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Dimensions",
              "canonicalReference": "@datashaper/react!Dimensions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "column",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            },
            {
              "parameterName": "considerCompactMode",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "useCellDimensions"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useColumnNamesList:function(1)",
          "docComment": "/**\n * Creates a list of column names for the table. If there are no columns supplied it will use the list from the table itself. Otherwise it will use the provided columns under the assumption the user has configured them as desired.\n *\n * @param table - \n *\n * @param columns - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useColumnNamesList(table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ", columns?: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "table",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "columns",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": true
            }
          ],
          "name": "useColumnNamesList"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useColumns:function(1)",
          "docComment": "/**\n * Overlays a number of special features onto the IColumn objects for a table. This includes overridden renderers to support our sorting, selection, and data visualization.\n *\n * @param table - \n *\n * @param columns - \n *\n * @param options - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useColumns(table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ", metadata?: "
            },
            {
              "kind": "Reference",
              "text": "TableMetadata",
              "canonicalReference": "@datashaper/tables!TableMetadata:interface"
            },
            {
              "kind": "Content",
              "text": ", columns?: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", onColumnHeaderClick?: "
            },
            {
              "kind": "Reference",
              "text": "ColumnClickFunction",
              "canonicalReference": "@datashaper/react!ColumnClickFunction:type"
            },
            {
              "kind": "Content",
              "text": ", onSort?: "
            },
            {
              "kind": "Reference",
              "text": "ColumnClickFunction",
              "canonicalReference": "@datashaper/react!ColumnClickFunction:type"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "ColumnOptions",
              "canonicalReference": "@datashaper/react!ColumnOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", virtualColumns?: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 17,
            "endIndex": 19
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "table",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "metadata",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "columns",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": true
            },
            {
              "parameterName": "onColumnHeaderClick",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            },
            {
              "parameterName": "onSort",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "isOptional": true
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "isOptional": true
            },
            {
              "parameterName": "virtualColumns",
              "parameterTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 16
              },
              "isOptional": true
            }
          ],
          "name": "useColumns"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useColumnStyles:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useColumnStyles(clickable: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", separator: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsColumnStyles",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "clickable",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "separator",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "useColumnStyles"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useDetailsHeaderRenderer:function(1)",
          "docComment": "/**\n * Overrides the default details header rendering so we can inject customization\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDetailsHeaderRenderer(): "
            },
            {
              "kind": "Reference",
              "text": "IRenderFunction",
              "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsHeaderProps",
              "canonicalReference": "@fluentui/react!IDetailsHeaderProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useDetailsHeaderRenderer"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useDetailsListStyles:function(1)",
          "docComment": "/**\n * Create a DetailsHeader style with enough height to handle the options we've turned on. Each one requires a small amount of vertical space that stacks up.\n *\n * @param options - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDetailsListStyles(isHeaderFixed: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", features?: "
            },
            {
              "kind": "Reference",
              "text": "DetailsListFeatures",
              "canonicalReference": "@datashaper/react!DetailsListFeatures:interface"
            },
            {
              "kind": "Content",
              "text": ", styles?: "
            },
            {
              "kind": "Reference",
              "text": "IDetailsListStyles",
              "canonicalReference": "@fluentui/react!IDetailsListStyles:interface"
            },
            {
              "kind": "Content",
              "text": ", hasColumnClick?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", compact?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDetailsListStyles",
              "canonicalReference": "@fluentui/react!IDetailsListStyles:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "isHeaderFixed",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "features",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "styles",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "hasColumnClick",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            },
            {
              "parameterName": "compact",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": true
            }
          ],
          "name": "useDetailsListStyles"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useFormattedNumber:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useFormattedNumber(value: "
            },
            {
              "kind": "Content",
              "text": "number | undefined"
            },
            {
              "kind": "Content",
              "text": ", formatter?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "formatter",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "useFormattedNumber"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useGroupHeaderRenderer:function(1)",
          "docComment": "/**\n * Overrides the default group header rendering so we can inject customization\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useGroupHeaderRenderer(table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ", computedMetadata?: "
            },
            {
              "kind": "Reference",
              "text": "TableMetadata",
              "canonicalReference": "@datashaper/tables!TableMetadata:interface"
            },
            {
              "kind": "Content",
              "text": ", groupHeaderFunction?: "
            },
            {
              "kind": "Reference",
              "text": "GroupHeaderFunction",
              "canonicalReference": "@datashaper/react!GroupHeaderFunction:type"
            },
            {
              "kind": "Content",
              "text": ", lazyLoadGroups?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IRenderFunction",
              "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsGroupDividerProps",
              "canonicalReference": "@fluentui/react!IDetailsGroupDividerProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "table",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "computedMetadata",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "groupHeaderFunction",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "lazyLoadGroups",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "useGroupHeaderRenderer"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useHeaderCommandBarDefaults:function(1)",
          "docComment": "/**\n * Helper to create the props necessary for the default inverted management bar. Basic colors can be customized, but note that if you do not want an always-inverted bar like that used in the DataShaper webapp, you may want to just tweak the Fluent styles as normal.\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useHeaderCommandBarDefaults(props?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ICommandBarProps",
              "canonicalReference": "@fluentui/react!ICommandBarProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", far?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", colors?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CommandBarColors",
              "canonicalReference": "@datashaper/react!CommandBarColors:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICommandBarProps",
              "canonicalReference": "@fluentui/react!ICommandBarProps:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": true
            },
            {
              "parameterName": "far",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            },
            {
              "parameterName": "colors",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "isOptional": true
            }
          ],
          "name": "useHeaderCommandBarDefaults"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useIncrementingColumnColorScale:function(1)",
          "docComment": "/**\n * Creates a thematic nominal color scale function that auto-increments for the numeric columns in a table.\n *\n * @param meta - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useIncrementingColumnColorScale(meta?: "
            },
            {
              "kind": "Reference",
              "text": "TableMetadata",
              "canonicalReference": "@datashaper/tables!TableMetadata:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "() => string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "meta",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "useIncrementingColumnColorScale"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useInputTableNames:function(1)",
          "docComment": "/**\n * Creates a dropdown list of id-names from the tables in a store TODO: for any given step, we should only show the tables created *prior* to this step, potentially via an optional filter callback on store.list. As it is, whenever the store is updated all the table dropdowns get the results.\n *\n * @param workflow - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useInputTableNames(workflow?: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "useInputTableNames"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useOnCreateStep:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useOnCreateStep(save: "
            },
            {
              "kind": "Content",
              "text": "(step: "
            },
            {
              "kind": "Reference",
              "text": "Step",
              "canonicalReference": "@datashaper/workflow!Step:interface"
            },
            {
              "kind": "Content",
              "text": ", index: number | undefined) => void"
            },
            {
              "kind": "Content",
              "text": ", selectOutput: "
            },
            {
              "kind": "Content",
              "text": "undefined | ((name: string) => void)"
            },
            {
              "kind": "Content",
              "text": ", dismissModal?: "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(step: "
            },
            {
              "kind": "Reference",
              "text": "Step",
              "canonicalReference": "@datashaper/workflow!Step:interface"
            },
            {
              "kind": "Content",
              "text": ", output: string | undefined, index: number | undefined) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "save",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "selectOutput",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "dismissModal",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "useOnCreateStep"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useOnDeleteStep:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useOnDeleteStep(workflow: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(index: number) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useOnDeleteStep"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useOnEditStep:function(1)",
          "docComment": "/**\n * A hook to get the onEditStep callback\n *\n * @param setStep - The step setter\n *\n * @param setStepIndex - The step-index setter\n *\n * @param showTableModal - A callback to show the table modal\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useOnEditStep(setStep: "
            },
            {
              "kind": "Content",
              "text": "(step: "
            },
            {
              "kind": "Reference",
              "text": "Step",
              "canonicalReference": "@datashaper/workflow!Step:interface"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ", setStepIndex: "
            },
            {
              "kind": "Content",
              "text": "(index: number) => void"
            },
            {
              "kind": "Content",
              "text": ", showTableModal: "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(step: "
            },
            {
              "kind": "Reference",
              "text": "Step",
              "canonicalReference": "@datashaper/workflow!Step:interface"
            },
            {
              "kind": "Content",
              "text": ", index: number) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "setStep",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "setStepIndex",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "showTableModal",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "useOnEditStep"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useOnSaveStep:function(1)",
          "docComment": "/**\n * @param workflow - The workflow\n *\n * @returns A callback to use when saving a step, either new or existing\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useOnSaveStep(workflow: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(step: "
            },
            {
              "kind": "Reference",
              "text": "Step",
              "canonicalReference": "@datashaper/workflow!Step:interface"
            },
            {
              "kind": "Content",
              "text": ", index: number | undefined) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useOnSaveStep"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useOnStepOutputChanged:function(1)",
          "docComment": "/**\n * This hooks handles managing a step's output within the workflow. This hook assumes that each step will have a single output, which will become an invariant we expand upon in the future.\n *\n * @param workflow - the workflow instance\n *\n * @returns A callback to use when the step output changes\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useOnStepOutputChanged(workflow: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(step: "
            },
            {
              "kind": "Reference",
              "text": "Step",
              "canonicalReference": "@datashaper/workflow!Step:interface"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useOnStepOutputChanged"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useOnStepSave:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useOnStepSave(workflow: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(step: "
            },
            {
              "kind": "Reference",
              "text": "Step",
              "canonicalReference": "@datashaper/workflow!Step:interface"
            },
            {
              "kind": "Content",
              "text": ", index: number | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Step",
              "canonicalReference": "@datashaper/workflow!Step:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useOnStepSave"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useOnUpdateStep:function(1)",
          "docComment": "/**\n * @param workflow - The workflow\n *\n * @returns A callback to use when saving a step, either new or existing\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useOnUpdateStep(workflow: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(step: "
            },
            {
              "kind": "Reference",
              "text": "Step",
              "canonicalReference": "@datashaper/workflow!Step:interface"
            },
            {
              "kind": "Content",
              "text": ", index: number | undefined) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useOnUpdateStep"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useReifiedTable:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useReifiedTable(table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "table",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useReifiedTable"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useSlicedTable:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useSlicedTable(table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ", offset: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", limit: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "table",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "offset",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "limit",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "useSlicedTable"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useSortedGroups:function(1)",
          "docComment": "/**\n * Sort top level group headers if the table is grouped, there isn't any column sorted or if the respective column is sorted\n *\n * @param table - \n *\n * @param column - \n *\n * @param sort - \n *\n * @param entries - \n *\n * @returns RowObject[] | undefined\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useSortedGroups(table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ", column?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", sort?: "
            },
            {
              "kind": "Reference",
              "text": "SortDirection",
              "canonicalReference": "@datashaper/schema!SortDirection:enum"
            },
            {
              "kind": "Content",
              "text": ", entries?: "
            },
            {
              "kind": "Reference",
              "text": "RowObject",
              "canonicalReference": "arquero!RowObject:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RowObject",
              "canonicalReference": "arquero!RowObject:type"
            },
            {
              "kind": "Content",
              "text": "[] | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "table",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "column",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "sort",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "entries",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "name": "useSortedGroups"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useSortedTable:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useSortedTable(table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ", column?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", sort?: "
            },
            {
              "kind": "Reference",
              "text": "SortDirection",
              "canonicalReference": "@datashaper/schema!SortDirection:enum"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "table",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "column",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "sort",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "useSortedTable"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useSortHandling:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useSortHandling(allowSorting: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", defaultSortColumn?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", defaultSortDirection?: "
            },
            {
              "kind": "Reference",
              "text": "SortDirection",
              "canonicalReference": "@datashaper/schema!SortDirection:enum"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "SortParameters",
              "canonicalReference": "@datashaper/react!SortParameters:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "allowSorting",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "defaultSortColumn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "defaultSortDirection",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "useSortHandling"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useStepOutputs:function(1)",
          "docComment": "/**\n * create a parallel array of output names for the steps\n *\n * @param workflow - The workflow instance\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useStepOutputs(workflow: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useStepOutputs"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useStripedRowsRenderer:function(1)",
          "docComment": "/**\n * @param striped - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useStripedRowsRenderer(striped: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", columnBorders: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IRenderFunction",
              "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowProps",
              "canonicalReference": "@fluentui/react!IDetailsRowProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "striped",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "columnBorders",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "useStripedRowsRenderer"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useSubsetTable:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useSubsetTable(table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ", columns?: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "table",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "columns",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": true
            }
          ],
          "name": "useSubsetTable"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useTableDropdownOptions:function(1)",
          "docComment": "/**\n * Creates a dropdown list of id-names from the tables in a store TODO: for any given step, we should only show the tables created *prior* to this step, potentially via an optional filter callback on store.list. As it is, whenever the store is updated all the table dropdowns get the results.\n *\n * @param workflow - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTableDropdownOptions(workflow?: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDropdownOption",
              "canonicalReference": "@fluentui/react!IDropdownOption:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "useTableDropdownOptions"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useWorkflow:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useWorkflow(input?: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ", inputs?: "
            },
            {
              "kind": "Reference",
              "text": "TableContainer",
              "canonicalReference": "@datashaper/tables!TableContainer:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "input",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": true
            },
            {
              "parameterName": "inputs",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "useWorkflow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useWorkflowDataTable:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useWorkflowDataTable(id: "
            },
            {
              "kind": "Content",
              "text": "string | undefined"
            },
            {
              "kind": "Content",
              "text": ", workflow?: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": ", existingTable?: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "existingTable",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "useWorkflowDataTable"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useWorkflowListener:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useWorkflowListener(workflow: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": ", setWorkflow?: "
            },
            {
              "kind": "Content",
              "text": "(workflow: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "setWorkflow",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "useWorkflowListener"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useWorkflowOutputListener:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useWorkflowOutputListener(workflow: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": ", setOutput?: "
            },
            {
              "kind": "Content",
              "text": "((tables: "
            },
            {
              "kind": "Reference",
              "text": "TableContainer",
              "canonicalReference": "@datashaper/tables!TableContainer:interface"
            },
            {
              "kind": "Content",
              "text": "[]) => void) | undefined"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "setOutput",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "useWorkflowOutputListener"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useWorkflowSteps:function(1)",
          "docComment": "/**\n * Gets the workflow processing steps\n *\n * @param workflow - the workflow intsance\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useWorkflowSteps(workflow: "
            },
            {
              "kind": "Reference",
              "text": "Workflow",
              "canonicalReference": "@datashaper/workflow!Workflow:class"
            },
            {
              "kind": "Content",
              "text": ", order?: "
            },
            {
              "kind": "Reference",
              "text": "DisplayOrder",
              "canonicalReference": "@datashaper/react!DisplayOrder:enum"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Step",
              "canonicalReference": "@datashaper/workflow!Step:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "workflow",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "order",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "useWorkflowSteps"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!visibleColumnsCommand:function(1)",
          "docComment": "/**\n * Constructs a visible columns command. This is a dropdown button that lists all of the columns in a table, with checks next to the visible ones.\n *\n * @param table - \n *\n * @param columns - \n *\n * @param onCheckChange - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function visibleColumnsCommand(table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ", columns?: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", onCheckChange?: "
            },
            {
              "kind": "Content",
              "text": "(column: string, checked: boolean) => void"
            },
            {
              "kind": "Content",
              "text": ", props?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ICommandBarItemProps",
              "canonicalReference": "@fluentui/react!ICommandBarItemProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICommandBarItemProps",
              "canonicalReference": "@fluentui/react!ICommandBarItemProps:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "table",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "columns",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "onCheckChange",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "isOptional": true
            }
          ],
          "name": "visibleColumnsCommand"
        }
      ]
    }
  ]
}
